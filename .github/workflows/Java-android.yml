# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the develop branch 
on: 
  push: 
    branches: [ main ] 
  pull_request: 
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel 
jobs: 
   update_tag:
  # This workflow contains a single job called "build" 
      runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job 
      steps: 
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it 
      #- uses: actions/checkout@v2
      # Runs a single command using the runners shell 
      - uses: actions/checkout@v3
      - name: Java
        uses: actions/setup-java@v2
        with: 
              java-version: 17
              distribution: 'adopt'
              cashe: gradle
      - name: Run unit tests
        run: |
              gradle init
              gradle wrapper
              gradle build
              gradle tasks --all
              chmod +x gradlew
              cd /home/runner/work/Java-android/Java-android/initial
              pwd
              gradlew run
              #gradle wrapper --gradle-version 7.4.2
              # chmod +x gradlew
              #chmod +x test
              #./gradlew tasks --all
              #cd /home/runner/work/C-android/C-android/
              #pwd
              #ls -l
             # ./gradlew build
             # ./gradlew test
            
    #  - name: Run tests
    #    run: ./gradlew test
    
        
        
         
     #   uses: actions/download-artifact@v3
     #   with:
     #       name: site.zip 
      
     # - name: build bin
     #   run: |
     #      cd /home/runner/work/C-android/C-android/.github/workflows
     #      pwd
     #      ls -l
     #      gcc test.c -o test
     #      pwd 
     #      ls -l
     #      chmod +x test
     #      ./test  1 2
     #      cp test /home/runner/work/C-android/C-android
         
     
  
           
           
           
          # zip  -r site.zip  hello
           
     # - name: Download artifact
     #   uses: actions/download-artifact@v3
     #   with:
     #       name: site.zip 
      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
            filename: test.zip     
            exclusions: ' *.cpp / *.c /*.yml  / .git'  
               
      - name: Create new release
        id: create-new-release
        uses: actions/create-release@latest
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
                run_number
          draft: false
          prerelease: false     

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:  
         upload_url:   ${{ steps.create-new-release.outputs.upload_url }}
         asset_path: ./test.zip
         asset_name: test-v${{ github.run_number }}.zip
         asset_content_type: application/zip
